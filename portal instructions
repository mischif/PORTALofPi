Set up FBSD install from which to create PORTAL image, turn everything off, optionally nuke after portal creation

Builder VM

-----------Stage 1--------------
portsnap fetch extract
pkg install python git gmake arm-none-eabi-gcc qemu-user-static
(you shouldn't need vim, but pkg install vim-lite if you do)
git clone --depth 1 --branch release/10.2.0 https://github.com/freebsd/freebsd.git /usr/src
git clone --depth 1 https://github.com/kientzle/crochet-freebsd.git /root/crochet-freebsd
make -C /usr/ports/sysutils/u-boot-rpi install


make -C /usr/ports/security/tor-devel fetch-recursive
make -C /usr/ports/dns/dnsmasq fetch-recursive
make -C /usr/ports/editors/vim-lite fetch-recursive
make -C /usr/ports/ports-mgmt/dialog4ports fetch-recursive
make -C /usr/ports/ports-mgmt/pkg fetch-recursive

-----------Stage 2---------------
copy custom kernel config into /sys/arm/conf/rpi-b

env TARGET=arm TARGET_ARCH=armv6 MAKEOBJDIRPREFIX=/usr/obj make -C /usr/src -j 4 toolchain

-----------Stage 3---------------
binmiscctl add armv6 --interpreter "/usr/local/bin/qemu-arm-static" --magic "\x7f\x45\x4c\x46\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x28\x00" --mask "\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff" --size 20 --set-enabled


cd ~/crochet-freebsd-master
./crochet.sh -c config.sh

make TARGET=arm TARGET_ARCH=armv6 DESTDIR=/root/crochet-freebsd-master/work/_.mount.freebsd

on portal
(needs tor, dnsmasq, vim-lite)

chflags schg <important config files, etc>

shutdown when new USB device inserted
network={\n ssid="MySSID"\n scan_ssid=1\n psk="MyPassword"\n} in /etc/wpa_supplicant.conf
network={\n ssid="MySSID"\n key_mgmt=none\n} in /etc/wpa_supplicant.conf
